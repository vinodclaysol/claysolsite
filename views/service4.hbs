{{>nav}}

<div class="ivipage app-wrapper" style="padding-top: 130px;">
    <div class="side-banner img-responsive">
        <canvas class="connecting-dots"></canvas>
        <div class="sr-head">
            <h2>In-Vehicle Infotainment</h2>
            <p>Driven by demand for seamless connectivity, In-Flight entertainment solutions are getting highly sophisticated. Claytronics's expertise in multimedia and connected devices along with our understanding of core automotive technologies make us an ideal choice for such solutions.</p>
        </div>
    </div>
    <div class="page-content">
        <div class="page-content-container container">
            <div class="row">
                <div class="col-md-12">
                  <p class="text-justify">The idea of ‘staying connected’
                    doesn’t just pertain to electronic devices any more;
                    it extends to automobiles as well. The convenience of real time data is one of the major
                    reasons behind the sudden growth in the global In-Vehicle Infotainment (IVI) and Advanced Driver Assist Systems
                    (ADAS). With the power of connectivity, today auto mobiles are equipped with real-time data and information on
                    road traffic, navigation as well as entertainment, which undoubtedly enhances the driving experience while
                    playing a crucial role in ensuring road safety. Companies like Google are working on the holy grail of
                    automotive technology - the driver-less car - which may become a reality soon. When that happens, the need to
                     be entertained and productive inside the car becomes even more relevant.</p>
                    <p class="text-justify">
                        Claysol's expertise in multimedia and connected devices along with our understanding of core automotive
                        technologies like CAN, LIN, J1850 etc, make us an ideal choice for bridging the gap between traditional
                        automotive systems and the modern connected car. We work on all the popular automotive platforms including
                        QNX, Qt, GenIVI and Android. Our services in this space includes platform and application development for
                        automotive consoles, navigation systems, ADAS, diagnostic applications etc.
                    </p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="dy-box">
                    <div class="dy-head">
                        <h2>System Development</h2>
                    </div>
                    <div class="dy-para">
                        <ul>
                            <li>IoT</li>
                            <li>Set Top Box</li>
                            <li>Networking & Brodacast Equipment</li>
                            <li>Security System</li>
                            <li>Display Controllers & USB Peripherals</li>
                        </ul>    
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="dy-box">
                    <div class="dy-head">
                        <h2>Platform Supported</h2>
                    </div>
                    <div class="dy-para">
                        <ul>
                            <li>Embedded Linux, XP</li>
                            <li>QNX</li>
                            <li>RTOS</li>
                            <li>WINCE</li>
                            <li>VXWORKS</li>
                            <li>BSP FOR ARM</li>
                        </ul>    
                    </div>
                </div>
            </div>
        </div>
            
    </div>
</div> 

<script>
    var canvasDots = function() {
    var canvas = document.querySelector('canvas'),
        ctx = canvas.getContext('2d'),
        colorDot = '#21be2b',
        color = '#21be2b';
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    canvas.style.display = 'block';
    ctx.fillStyle = colorDot;
    ctx.lineWidth = .2;
    ctx.strokeStyle = color;

    var mousePosition = {
        x: 30 * canvas.width / 100,
        y: 30 * canvas.height / 100
    };

    var dots = {
        nb: 300,
        distance: 60,
        d_radius: 100,
        array: []
    };

    function Dot(){
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;

        this.vx = -.5 + Math.random();
        this.vy = -.5 + Math.random();

        this.radius = Math.random();
    }

    Dot.prototype = {
        create: function(){
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
            ctx.fill();
        },

        animate: function(){
            for(i = 0; i < dots.nb; i++){

                var dot = dots.array[i];

                if(dot.y < 0 || dot.y > canvas.height){
                    dot.vx = dot.vx;
                    dot.vy = - dot.vy;
                }
                else if(dot.x < 0 || dot.x > canvas.width){
                    dot.vx = - dot.vx;
                    dot.vy = dot.vy;
                }
                dot.x += dot.vx;
                dot.y += dot.vy;
            }
        },

        line: function(){
            for(i = 0; i < dots.nb; i++){
                for(j = 0; j < dots.nb; j++){
                    i_dot = dots.array[i];
                    j_dot = dots.array[j];

                    if((i_dot.x - j_dot.x) < dots.distance && (i_dot.y - j_dot.y) < dots.distance && (i_dot.x - j_dot.x) > - dots.distance && (i_dot.y - j_dot.y) > - dots.distance){
                        if((i_dot.x - mousePosition.x) < dots.d_radius && (i_dot.y - mousePosition.y) < dots.d_radius && (i_dot.x - mousePosition.x) > - dots.d_radius && (i_dot.y - mousePosition.y) > - dots.d_radius){
                            ctx.beginPath();
                            ctx.moveTo(i_dot.x, i_dot.y);
                            ctx.lineTo(j_dot.x, j_dot.y);
                            ctx.stroke();
                            ctx.closePath();
                        }
                    }
                }
            }
        }
    };

    function createDots(){
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        for(i = 0; i < dots.nb; i++){
            dots.array.push(new Dot());
            dot = dots.array[i];

            dot.create();
        }

        dot.line();
        dot.animate();
    }

    window.onmousemove = function(parameter) {
        mousePosition.x = parameter.pageX;
        mousePosition.y = parameter.pageY;
    }

    mousePosition.x = window.innerWidth / 2;
    mousePosition.y = window.innerHeight / 2;

    setInterval(createDots, 1000/30);
};

window.onload = function() {
    canvasDots();
};
</script>